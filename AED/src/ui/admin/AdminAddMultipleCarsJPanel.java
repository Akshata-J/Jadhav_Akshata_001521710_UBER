/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.admin;

import java.awt.CardLayout;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.List;
import java.util.Date;
import java.util.Scanner;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import model.Car;
import model.Uber;
import ui.MainJPanel;

/**
 *
 * @author akshatajadhav
 */
public class AdminAddMultipleCarsJPanel extends javax.swing.JPanel {

    private JPanel mainUIPanel;
    private MainJPanel mjp;
    private Uber uber;

    /**
     * Creates new form AdminJPanel
     */
    public AdminAddMultipleCarsJPanel(JPanel mainUIPanel, MainJPanel mjp, Uber uber) {
        initComponents();
//        adminFileViewTable.getColumnModel().getColumn(0).setPreferredWidth(75);
//        adminFileViewTable.getColumnModel().getColumn(6).setPreferredWidth(25);
//        adminFileViewTable.getColumnModel().getColumn(7).setPreferredWidth(20);
//        adminFileViewTable.getColumnModel().getColumn(8).setPreferredWidth(40);
        this.mainUIPanel = mainUIPanel;
        this.mjp = mjp;
        this.uber = uber;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelTitle = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jPanelAddOptions = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        backToMainMenu = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnUploadFile = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        adminFileViewTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(742, 679));

        jPanelTitle.setBackground(new java.awt.Color(255, 255, 255));

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(0, 0, 0));
        jTextField1.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 36)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("UBER ADMIN");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTitleLayout = new javax.swing.GroupLayout(jPanelTitle);
        jPanelTitle.setLayout(jPanelTitleLayout);
        jPanelTitleLayout.setHorizontalGroup(
            jPanelTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField1)
        );
        jPanelTitleLayout.setVerticalGroup(
            jPanelTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTitleLayout.createSequentialGroup()
                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanelAddOptions.setBackground(new java.awt.Color(0, 0, 0));

        jButton1.setText("ADD CAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("ADD MULTIPLE CARS");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        backToMainMenu.setText("MAIN MENU");
        backToMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToMainMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAddOptionsLayout = new javax.swing.GroupLayout(jPanelAddOptions);
        jPanelAddOptions.setLayout(jPanelAddOptionsLayout);
        jPanelAddOptionsLayout.setHorizontalGroup(
            jPanelAddOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAddOptionsLayout.createSequentialGroup()
                .addContainerGap(85, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backToMainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
        );

        jPanelAddOptionsLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton2});

        jPanelAddOptionsLayout.setVerticalGroup(
            jPanelAddOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAddOptionsLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanelAddOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(backToMainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jPanelAddOptionsLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton1, jButton2});

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 423));

        btnUploadFile.setText("UPLOAD FILE");
        btnUploadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadFileActionPerformed(evt);
            }
        });

        adminFileViewTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial Number", "Model", "Make", "Manufactured Year", "Type", "Seats", "Avaibility", "City", "Manufacture Certificate Expiry"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(adminFileViewTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnUploadFile, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(btnUploadFile, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 12, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 742, Short.MAX_VALUE)
            .addComponent(jPanelAddOptions, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanelAddOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void backToMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToMainMenuActionPerformed
        JFrame f = (JFrame) SwingUtilities.getRoot(mainUIPanel);
        mainUIPanel.removeAll();
        mainUIPanel.add("MainJPanel", mjp);
        CardLayout card = (CardLayout) mainUIPanel.getLayout();
        card.next(mainUIPanel);
        f.pack();
        f.setLocationRelativeTo(null);
    }//GEN-LAST:event_backToMainMenuActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        JFrame f = (JFrame) SwingUtilities.getRoot(mainUIPanel);
        AdminAddCarJPanel adminAddCarJPanel = new AdminAddCarJPanel(mainUIPanel, mjp, uber);
        //mainUIPanel.removeAll();
        mainUIPanel.add("AdminAddCarJPanel", adminAddCarJPanel);
        CardLayout card = (CardLayout) mainUIPanel.getLayout();
        card.next(mainUIPanel);
        f.pack();
        f.setLocationRelativeTo(null);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnUploadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadFileActionPerformed
        filePath = getFilePath();
        if(filePath==null){
            JOptionPane.showMessageDialog(this, "No file selected!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        loadCars();
        if (!illeagalEntry.isEmpty()) {
            JOptionPane.showMessageDialog(this, String.join("\n", illeagalEntry), "Illegal Data", JOptionPane.ERROR_MESSAGE);
            if (cars.isEmpty()) {
                return;
            }
        }
        if (cars.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No data added!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        JOptionPane.showMessageDialog(this, "Successfully Added "+String.valueOf(cars.size())+" Cars to Uber fleet!!!\nList of added car details can be seen in the table.", "Information", JOptionPane.INFORMATION_MESSAGE);
        updateTable();
    }//GEN-LAST:event_btnUploadFileActionPerformed

    private String getFilePath() {
        filePath=null;
        JFileChooser fc = new JFileChooser();
        fc.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("CSV File", "CSV");
        fc.setAcceptAllFileFilterUsed(false);
        fc.addChoosableFileFilter(filter);
        int result = fc.showSaveDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fc.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            return path;
        }
        return null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable adminFileViewTable;
    private javax.swing.JButton backToMainMenu;
    private javax.swing.JButton btnUploadFile;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelAddOptions;
    private javax.swing.JPanel jPanelTitle;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
    private String filePath;
    private List<Car> cars;
    private List<String> illeagalEntry;

    private void loadCars() {
        cars = new ArrayList<>();
        String line = "";
        String splitBy = ",";
        illeagalEntry = new ArrayList<>();
        SimpleDateFormat f = new SimpleDateFormat("MM/dd/yyyy");
        f.setLenient(false);
        try {
            File file = new File(filePath);
            Scanner myReader = new Scanner(file);
            while (myReader.hasNextLine()) {
                line = myReader.nextLine();
                String[] data = line.split(splitBy);
                Long sn = null;
                int my = 0, seats = 0;
                Date emc = null;
                boolean availbility = false;
                try {
                    sn = Long.parseLong(data[0]);
                    my = Integer.parseInt(data[3]);
                    seats = Integer.parseInt(data[5]);
                    emc = f.parse(data[8]);
                } catch (NumberFormatException | ParseException e) {
                    illeagalEntry.add(line);
                    continue;
                }
                if (data[6].equalsIgnoreCase("true")) {
                    availbility = true;
                }
                if (uber.getSerialNumbers() != null && uber.getSerialNumbers().contains(sn)) {
                    JOptionPane.showMessageDialog(this, "Serial Number Already Exists!!", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                if (sn < 10000) {
                    illeagalEntry.add(line);
                    continue;
                }
                if (my < 1996) {
                    illeagalEntry.add(line);
                    continue;
                }
                if (my > LocalDate.now().getYear()) {
                    illeagalEntry.add(line);
                    continue;
                }
                Date afterYear = Date.from(LocalDate.now().plusYears(1).atStartOfDay()
                        .atZone(ZoneId.systemDefault()).toInstant());
                if (!emc.after(afterYear)) {
                    illeagalEntry.add(line);
                    continue;
                }
                if (seats <= 0) {
                    illeagalEntry.add(line);
                    continue;
                }
                Car car = new Car();
                car.setSerialNumber(sn);
                car.setModelNumber(data[1]);
                car.setMake(data[2]);
                car.setManufacturedYear(my);
                car.setType(data[4]);
                car.setSeats(seats);
                car.setAvailability(availbility);
                car.setCity(data[7]);
                car.setMaintenanceCertificateDate(emc);

                if (car.getType() == null) {
                    illeagalEntry.add(line);
                    continue;
                }
                if (car.getModelNumber() == null) {
                    illeagalEntry.add(line);
                    continue;
                }
                if (car.getMake() == null) {
                    illeagalEntry.add(line);
                    continue;
                }
                if (car.getCity().equalsIgnoreCase("Select")) {
                    illeagalEntry.add(line);
                    continue;
                }

                if (uber.getSerialNumbers() == null || !uber.getSerialNumbers().contains(sn)) {
                    uber.addCarToFleet(car);
                    cars.add(car);
                } else {
                    illeagalEntry.add(line);
                }
            }
        } catch (FileNotFoundException e) {
            System.out.println(e.getMessage());
        }
    }

    private void updateTable() {
        int rowCount = adminFileViewTable.getRowCount();
        DefaultTableModel model = (DefaultTableModel) adminFileViewTable.getModel();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        for (Car c : cars) {
            model.addRow((Object[]) c.toList());
        }
    }
}
//12345,ARDSR,TESLA,2018,PERSONAL,5,true,Boston,10/5/2018
//0    ,1    ,2    ,3   ,4       ,5,6   ,7     ,8
